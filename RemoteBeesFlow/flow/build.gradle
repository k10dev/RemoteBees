apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

buildscript {
    ext.kotlin_version = '1.3.72'
    ext.flowkit_version = 'fix-kotlin-generator-SNAPSHOT'
    repositories {
        mavenCentral()
        google()
        jcenter()
        maven { url 'https://jitpack.io'}
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        classpath "com.github.inmotionsoftware.FlowKit:compiler:$flowkit_version"
        classpath 'net.sourceforge.plantuml:plantuml:1.2020.4'
    }
}

apply plugin: 'flow-kit-compiler'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 25
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'

    // Promise dependency
    implementation "com.github.inmotionsoftware:promisekt:1.0.0"
    // FlowKit
    implementation "com.github.inmotionsoftware.FlowKit:lib:$flowkit_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

flowKit {
    namespace = 'dev.beehive.remotebees.flow'
    sourceDir = file('src/main/flows')
}

build.dependsOn compileFlow
